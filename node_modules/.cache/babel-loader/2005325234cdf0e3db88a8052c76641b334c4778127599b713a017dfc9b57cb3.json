{"ast":null,"code":"import axios from \"../../http\";\nimport { USER_LOGIN_FAILED, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAILED, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_PROFILE_DETAILS_REQUEST, USER_PROFILE_DETAILS_SUCCESS, USER_PROFILE_DETAILS_FAILED, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../../constant/userConstant\";\nimport { Action } from \"@remix-run/router\";\n\n// logout action //\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\n// login action //\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILED,\n      payload: error.message\n    });\n  }\n};\n\n// register action //\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILED,\n      payload: error.message\n    });\n  }\n};\n\n// profile details action //\nexport const getUserProfileDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      //token compare karny k liye hm yahan header likhain gy\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}` // yahan hm token get ly rhy hain, get kr rahy hain generate nae\n      }\n    };\n\n    const {\n      data\n    } = await axios.get(`/${id}`, config);\n    dispatch({\n      type: USER_PROFILE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_DETAILS_FAILED,\n      payload: error.message\n    });\n  }\n};\n\n// profile update action\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/profile', user, config); //yahan hm user ku pass krwa rhy hain ku k hmary pas already aik user hai.\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      p\n    });\n  } catch (error) {}\n};","map":{"version":3,"names":["axios","USER_LOGIN_FAILED","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAILED","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_PROFILE_DETAILS_REQUEST","USER_PROFILE_DETAILS_SUCCESS","USER_PROFILE_DETAILS_FAILED","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","Action","logout","dispatch","localStorage","removeItem","type","login","email","password","config","headers","data","post","payload","setItem","JSON","stringify","error","message","register","name","getUserProfileDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","p"],"sources":["/home/ibrahim/MERN-ecommerce/frontend/src/redux/actions/userAction.js"],"sourcesContent":["import axios from \"../../http\";\nimport {\n    USER_LOGIN_FAILED,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAILED,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_PROFILE_DETAILS_REQUEST,\n    USER_PROFILE_DETAILS_SUCCESS,\n    USER_PROFILE_DETAILS_FAILED,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n} from \"../../constant/userConstant\"\nimport { Action } from \"@remix-run/router\";\n\n// logout action //\nexport const logout = () => dispatch => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n}\n\n// login action //\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_LOGIN_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/login', { email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAILED,\n            payload: error.message\n        })\n    }\n}\n\n// register action //\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAILED,\n            payload: error.message\n        })\n    }\n}\n\n// profile details action //\nexport const getUserProfileDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_PROFILE_DETAILS_REQUEST\n        });\n        const { userLogin: { userInfo } } = getState()\n        const config = { //token compare karny k liye hm yahan header likhain gy\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}` // yahan hm token get ly rhy hain, get kr rahy hain generate nae\n            }\n        }\n        const { data } = await axios.get(`/${id}`, config)\n        dispatch({\n            type: USER_PROFILE_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_PROFILE_DETAILS_FAILED,\n            payload: error.message\n        })\n    }\n}\n\n// profile update action\nexport const updateUserProfile = (user) => async(dispatch,getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n        const {userLogin:{userInfo}} = getState();\n        const config = {headers:{\n            'Content-Type' : 'application/json',\n            Authorization:`Bearer ${userInfo.token}`\n        }}\n        const {data} = await axios.put('/profile', user,config) //yahan hm user ku pass krwa rhy hain ku k hmary pas already aik user hai.\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            p\n        })\n    } catch (error) {\n        \n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}